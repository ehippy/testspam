/**
 * BombBomb
 * We make it easy to use simple video to build relationships
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BombbombNodejsOpenapi) {
      root.BombbombNodejsOpenapi = {};
    }
    root.BombbombNodejsOpenapi.UtilitiesApi = factory(root.BombbombNodejsOpenapi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * Utilities service.
   * @module api/UtilitiesApi
   * @version 1.0.0
   */

  /**
   * Constructs a new UtilitiesApi. 
   * @alias module:api/UtilitiesApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createOAuthClient operation.
     * @callback module:api/UtilitiesApi~createOAuthClientCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an OAuth Client
     * Creates an OAuth Client managed by the user
     * @param {String} name The name of the OAuth client. e.g. MyCrm DEV, or MyCrm PROD
     * @param {String} redirectUri The URI to direct the client to after logging in.
     * @param {module:api/UtilitiesApi~createOAuthClientCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.createOAuthClient = function(name, redirectUri, callback) {
      var postBody = null;

      // verify the required parameter 'name' is set
      if (name == undefined || name == null) {
        throw "Missing the required parameter 'name' when calling createOAuthClient";
      }

      // verify the required parameter 'redirectUri' is set
      if (redirectUri == undefined || redirectUri == null) {
        throw "Missing the required parameter 'redirectUri' when calling createOAuthClient";
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'name': name,
        'redirectUri': redirectUri
      };

      var authNames = ['BBOAuth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/oauthclient', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOAuthClient operation.
     * @callback module:api/UtilitiesApi~deleteOAuthClientCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an OAuth Client
     * Deletes an OAuth Client managed by the user
     * @param {String} id The id of the OAuth Client
     * @param {module:api/UtilitiesApi~deleteOAuthClientCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteOAuthClient = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id == undefined || id == null) {
        throw "Missing the required parameter 'id' when calling deleteOAuthClient";
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BBOAuth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/oauthclient/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOAuthClients operation.
     * @callback module:api/UtilitiesApi~getOAuthClientsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists OAuth Clients
     * Enumerates OAuth Clients managed by the user
     * @param {module:api/UtilitiesApi~getOAuthClientsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getOAuthClients = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BBOAuth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/oauthclient', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSpec operation.
     * @callback module:api/UtilitiesApi~getSpecCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Describes this api
     * Describes methods available through the API.
     * @param {module:api/UtilitiesApi~getSpecCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.getSpec = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/spec', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
