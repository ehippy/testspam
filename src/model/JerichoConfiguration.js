/**
 * BombBomb
 * We make it easy to use simple video to build relationships
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BombbombNodejsOpenapi) {
      root.BombbombNodejsOpenapi = {};
    }
    root.BombbombNodejsOpenapi.JerichoConfiguration = factory(root.BombbombNodejsOpenapi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The JerichoConfiguration model module.
   * @module model/JerichoConfiguration
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>JerichoConfiguration</code>.
   * @alias module:model/JerichoConfiguration
   * @class
   * @param isPrompt {Boolean} Determines whether this is a static or prompted send.
   */
  var exports = function(isPrompt) {
    var _this = this;




    _this['isPrompt'] = isPrompt;






  };

  /**
   * Constructs a <code>JerichoConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/JerichoConfiguration} obj Optional instance to populate.
   * @return {module:model/JerichoConfiguration} The populated <code>JerichoConfiguration</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('clientGroupId')) {
        obj['clientGroupId'] = ApiClient.convertToType(data['clientGroupId'], 'String');
      }
      if (data.hasOwnProperty('sendDate')) {
        obj['sendDate'] = ApiClient.convertToType(data['sendDate'], 'Date');
      }
      if (data.hasOwnProperty('isPrompt')) {
        obj['isPrompt'] = ApiClient.convertToType(data['isPrompt'], 'Boolean');
      }
      if (data.hasOwnProperty('emailId')) {
        obj['emailId'] = ApiClient.convertToType(data['emailId'], 'String');
      }
      if (data.hasOwnProperty('promptSubject')) {
        obj['promptSubject'] = ApiClient.convertToType(data['promptSubject'], 'String');
      }
      if (data.hasOwnProperty('promptBody')) {
        obj['promptBody'] = ApiClient.convertToType(data['promptBody'], 'String');
      }
      if (data.hasOwnProperty('emailSubject')) {
        obj['emailSubject'] = ApiClient.convertToType(data['emailSubject'], 'String');
      }
      if (data.hasOwnProperty('emailBody')) {
        obj['emailBody'] = ApiClient.convertToType(data['emailBody'], 'String');
      }
      if (data.hasOwnProperty('sendWithoutVideo')) {
        obj['sendWithoutVideo'] = ApiClient.convertToType(data['sendWithoutVideo'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {String} clientGroupId
   */
  exports.prototype['clientGroupId'] = undefined;
  /**
   * When the email should be sent.
   * @member {Date} sendDate
   */
  exports.prototype['sendDate'] = undefined;
  /**
   * Determines whether this is a static or prompted send.
   * @member {Boolean} isPrompt
   */
  exports.prototype['isPrompt'] = undefined;
  /**
   * Static send: The Email to send on behalf of the group members.
   * @member {String} emailId
   */
  exports.prototype['emailId'] = undefined;
  /**
   * Video Prompt: The subject line prompting the user to record a video.
   * @member {String} promptSubject
   */
  exports.prototype['promptSubject'] = undefined;
  /**
   * Video Prompt: The HTML body of the email prompting the user to record a video.
   * @member {String} promptBody
   */
  exports.prototype['promptBody'] = undefined;
  /**
   * Video Prompt: The subject line of the final sent email
   * @member {String} emailSubject
   */
  exports.prototype['emailSubject'] = undefined;
  /**
   * Video Prompt: The HTML body of the final sent email.
   * @member {String} emailBody
   */
  exports.prototype['emailBody'] = undefined;
  /**
   * Video Prompt: Whether to send the final email if no video was recorded.
   * @member {Boolean} sendWithoutVideo
   */
  exports.prototype['sendWithoutVideo'] = undefined;



  return exports;
}));


